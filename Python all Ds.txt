25 nov

# Online Python compiler (interpreter) to run Python online.
# Write Python 3 code in this online editor and run it.
# print("Try programiz.pro")
# import math

# # print(math.sqrt(25))

# print(25**(1/2))
# print(6>7 + 7 > 5)
# a = int(input("enter 1 number:-"))
# b = int(input("enter 2 number:-"))
# c = int(input("enter 3 number:-"))

# # int(input(age))

# if ((a>b) and (a>c)):
#     print("greater",a)
    
# elif (b>a) and (b>c): 
#     print("greater",b)
    
# else:
#     print("greater",c)
    
# if ((a<b) and (a<c)):
#     print("smallest",a)
    
# elif (b<a) and (b<c): 
#     print("smallest", b)
    
# else: 
#     print("smallest", c)
    

email = "gau@gmail.com"
password = "09876"
user_email = input("enter your id :- ")
user_password = input("enter Password :- ")
if email == user_email and password == user_password:
    print("welcome")
elif email == user_email and password != user_password:
    # print("enter password again :- ")
    user_password = input("enter Password again :- ")
    if password == user_password:
        print("welcome!!!")
    else: 
        print("wrond Password")
else:
    print("invalid!!" )
-----------------------------------------------------------------

26 nov

# v = ["gaurav", 1, "kt", 4,6]
# for i in range(5):
#     print(v[i])
# print(v[0:6])
# print(v[0:5:2])
# print(v[::2])
# print(v[::-1])
# print(v[2:4])
# print(v[::-3])
# x = range(1,10)
# y = [*x]
# print(y)
# pas = "123"
# user_pass = input("enter your password")
# while pas != user_pass:
#     print("try More")
#     user_pas = input("enter your pass")
import random


random_num = random.randint(1,100)
print(random_num)


user_input = int(input("Enter a Number :- "))
# while random_num == user_input:
#     print("Matched")
        
i = 2
while random_num != user_input and i < 6:
    
    # user_input= int(input("Enter a Number"))
    if user_input > random_num:
        print("go Lower")
        user_input= int(input("Enter a Number :- "))
    elif user_input < random_num:
        print("go upper")
        user_input= int(input("Enter a Number :- "))
    else:
        print("go Away")
    i += 1  


if random_num == user_input:
    print("Matched")

if i > 6:
    print("Lost The Game")
-----------------------------------------------

27 nov 

n1 = 0
n2 = 1
n3 = n1

num = 15
count = 1

while count < num:
    print(n3, end=" ")
    count += 1
    n1, n2 = n2, n3
    n3 = n1 + n2

n1 = 0 
n2 = 1
n3 = n1
for i in range(15):
    print(n1, end=" ")
    n3 = n1 + n2
    n1 = n2 
    n2 = n3
----------------------------------------------
Q1. 

salary = float(input("Enter your salary : "))
print("You have entered : ",salary)
HRA = (salary * 10)/100
DA = (salary * 5)/100
PF = (salary * 3)/100
if salary < 500000 :
    tax = 0
elif salary>=500000 and salary<1000000 :
    tax = (salary * 10)/100
elif salary>=1000000 and salary<2000000 :
    tax = (salary * 20)/100
else :
    tax = (salary * 30)/100

in_hand_salary = salary - (HRA + DA + PF + tax)

print("HRA :", HRA , "DA :" ,DA ,"PF :", PF ,"Tax :", tax )

print("In hand salary = ",in_hand_salary)

-----------------------------------------
Q2. 

one = int(input("Enter First Angle :- "))
second = int(input("Enter First Angle :- "))
third = int(input("Enter First Angle :- "))
total_sum = one + second + third
if total_sum == 180:
    print("it is a triangle")
else:
    print("it is not a triangle")
---------------------------------------
Q3. 

cost_price = int(input("Enter Cost Price :- "))
Selling_price = int(input("Enter Selling Price :- "))
diff = Selling_price - cost_price
if diff == 0:
    print("No Profit and No Loss")
elif diff > 0:
    print("Profit of", diff)
else:
    print("Loss of",abs(diff))
---------------------------------------
Q4. 

cm = float(input("Enter Cm :- "))
Km = float(input("Enter Km :- "))
USD = float(input("Enter USD :- "))
foot = cm * 0.0328084
print(foot, "Converted to Foot")
miles = Km * 0.621371
print(miles, "Converted to Foot")
inr = USD * 84.45
print(inr, "Converted to Foot")

Q5. 
n1 = 0 
n2 = 1
n3 = n1
for i in range(10):
    print(n1, end=" ")
    n3 = n1 + n2
    n1 = n2
    n2 = n3
-------------------------------
Q6. 

num = int(input("Enter the number : "))
fact = 1
for i in range(2,num + 1) :
    fact = fact * i
print(" The factorial is :",fact)
-----------------------------------

Q7. 

original_num = int(input("Enter Number to be REversed :- "))
reverse_num = 0
while original_num > 0:
    digit = original_num % 10
    reverse_num = reverse_num * 10 + digit 
    # print(original_num)
    original_num //= 10
    
print(reverse_num)
-----------------------------------

Q8. 

num = int(input("Enter Number :- "))
sum_ = 0

i = 0
while i<num+1 :
    i += 1
    if i%5==0 :
        continue
    res = sum_+i
    if res > 300 :
        break
    sum_ += i
print(sum_)
-----------------------------------------

Q9. 

sum = 0
avg = 0
count =1
input_num = int(input("Enter number :"))
while input_num != 0 :
    sum = sum + input_num
    avg = sum/count
    input_num = int(input("Enter another number :"))
    count += 1

print("Sum = ",sum,"Average =",avg)
-----------------------------------
Q9. 

for i in range (2000, 3201):
    if i % 7 == 0 and i % 5 != 0:
        print(i, end=", ")
-------------------------------
Q10. 
for i in range (1000, 3001):
    if i % 2 == 0:
        print(i, end=", ")
-------------------------------
Q12. 

num = int(input("Enter a Number :- "))
if num % 2 == 0 or num % 3 == 0 or num % 5 == 0 or num % 7 == 0:
    print("not prime")
else:
    print("prime") 
----------------------------------





nov -29 


def gkt(*gaurav):
    # * arg can take multiple agruments
    for name in gaurav:
        print(name)

gkt("a","b",1,2,3)

--------------------------------------

Dec - 02 

# a = 1
for i in range(1,5):
    a = 1
    for j in range(0,i):
        print(a,end="")
        a = a+1
    for i in range(i-1,0,-1):
        print(i,end="")
    print()

output :- 
1
121
12321
1234321
----------------

every even digit ---

for num in range(1000,3000):
  
  curr=num
  last_digit=num%10
  flag=1
  while curr>0:
    if curr%2!=0:
      flag=0
      break
    else:
      curr=curr//10
  if flag==1:
    print(num,end=" ")
--------------------------------

Dec - 03

Q. Number Pallindrome 

original_num = int(input("Enter a Number :- "))
Reverse_ = 0
digit = 0
org = original_num
while original_num > 0:
    digit = original_num % 10
    Reverse_ = Reverse_ * 10 + digit
    original_num //= 10
print(Reverse_)
# print(original_num)
if org == Reverse_ :
    print("true")
else:
    print("false")
--------------------

Q. string palindrome 

strr = "madam"
strr2 = ""
strr3 = strr
n = len(strr)
for ch in range(n-1,-1,-1):
    strr2 += strr[ch]
# print(strr)
# print(strr2)
# print(strr3)
if strr3 == strr2:
    print("true")
else:
    print("false")
---------------------

DEC - 4

s = "hi hi hi how are you hi"
n = len(s)
count = 0
for i in range(0,n):
    if s[i]=='h' and s[i+1]=='i':
        count += 1
        
print(count)
-----------------

temp=""
list56=[]
for char in sentence:
  if char!=" ":
    temp+=char
  else:
    list56.append(temp)
    temp=""
print(list56)
counter=0
for ele in list56:
  if ele=="hi":
    counter+=1
print(counter)
-----------------
    
Memory Aaddresses------
list06 = [12,4,34,35,45]
print(id(list06))

list05 = list06
print(id(list05))

list07 = list06.copy()
print(id(list07))
---------------------------
list01 = [i**2 for i in range(1,10) if i % 2 == 0]    
print(list01)

list02 = ["apple", "aam", "cherry", "kiwi", "mango" ]

newlist = [x for x in list02 if "a" in x]
print(newlist)

newlist2 = [x for x in list02 if x.startswith("a")]
print(newlist2)

list03 = []
for ele in list02:
    if ele[0] == "a":
        list03.append(ele)
print(list03) 
----------------------------------

12 DEC - 2024

d1 = {
    "orange" : 10,
    "Apple"  : 50,
    "Mango"  : 40
}
print(d1)
print(d1.keys())
print(d1.values())
print(d1["Apple"])

for ele in d1:
    print(ele, "-->", d1[ele])
    
    
for ele in d1:
    if d1[ele] == 40:
        print(ele)
        
for ele in d1:
    if ele == "Apple":
        print(d1[ele])
        
d1["kiwi"] = 10
print(d1)

st1 = "aksjdhfiqwoeiryzmcxnbqeiouqeioquqeiou"
dict = {"a":0,"e":0,"i":0,"o":0,"u":0}
for char in st1:
    if char == "a" or char == "A":
        dict["a"] += 1
    elif char == "e" or char == "E":
        dict["e"] += 1
    elif char == "i" or char == "I" :
        dict["i"] += 1
    elif char == "o" or char == "O" :
        dict["o"] += 1
    elif char == "u" or char == "U" :
        dict["u"] += 1

print(dict)

vowel = "aeiouAEIOU"
d3 = {}
for ele in st1:
    if ele in vowel:
        if ele in d3:
            d3[ele]+=1
        else:
          d3[ele]=1
print(d3)

name = ['a', 'b', 'c', 'd']
marks = [10,20,30,40]
dic = {}
for i in range(4):
    dic[name[i]] = marks[i]
print(dic)
-------------------------------

Dec - 12/12/24

Exception Handling ------ 

try:
  with open("gaurav.txt", 'r') as f:
    print(f.read())
except FileNotFoundError as e:
  print(e)
------------------------------
try:
  with open("gaurav.txt", 'r') as f:
    print(f.read())
except FileNotFoundError as e:
  with open("gaurav.txt", 'w') as f:
    print(f.write("a"))


------------------------------------


try:
  with open("gaurav.txt", 'r') as f:
    print(f.read())
  list34 = [1,2,3,4]
  print(list34[20])
except FileNotFoundError as a:
    print(a)
except IndexError:
  print("out of range")

-------------------------------------------

try:
  with open("gaurav.txt", 'r') as f:
    print(f.read())
  list34 = [1,2,3,4]
  i = int(input("Enter index: -"))
  print(list34[i])
  x = int(input("enter first num :- "))
  y = int(input("enter second num :- "))
  print(x/y)
except FileNotFoundError as a:
    print(a)
except IndexError:
  print("out of range")
except ZeroDivisionError:
  print("Erorr aari h")
--------------------------------------

Types of Decorators---

Function Decorators

Modify the behavior of a single function.
Class Decorators

Modify the behavior of a class.
Built-in Decorators

Python provides built-in decorators like @staticmethod, @classmethod, and @property.




def my_decorator(func):
    def wrapper():
        print("Something is happening before the function is called.")
        func()
        print("Something is happening after the function is called.")
    return wrapper

@my_decorator
def say_hello():
    print("Hello!")

say_hello()
----------------------------------------

OOps----


class Animal:
    
    def __init__(self, name, features):
        self.name = name
        self.features = features
    def eat(self):
        print("I am Eating")

        
ani1 = Animal("Lion", "Roar")
print(ani1.name)
print(ani1.features)

ani2 = Animal("Tiger", "Fast")
print(ani2.name)
print(ani2.features)

ani3 = Animal("jiraffe", "Height")
print(ani3.name)
print(ani3.features)

ani4 = Animal("Dog", "Loyalty")
print(ani4.name)
print(ani4.features)

ani4.eat()

a1 = Animal('No', 4)
a1.features
a1.eat()

----------------------------------------

Inheritance and Encapsulisation

class Animal:
  def __init__ (self,name,age):
    self.name = name
    self.age = age

  def eat(self):
    return "I am eating"
  def age_up(self):
    self.age += 1
  def retirement(self):
    self.age_up()
    if self.age>=10:
      print("ram nam!!")
    else:
      print("baad me aana")


class Lion(Animal):
  def __init__(self,name,age,mane_color):
    super().__init__(name,age)
    self.mane_color=mane_color
  def lion_food(self):
    return super().eat()
  def eat(self):
    return super().eat() + " Meat of the Deer"
  def age_up(self):
    return super().age_up()
  def retirement(self):
    return super().retirement()

-------------------------------------------------


Magic Function in Python ------ 

def __str__ (magic Function)




OCR model tkk sir ne kia huava  h 
Large lang model
--------------------------------------------


class calculation:
  def add(self,a,b):
    return a+b

c1 = calculation()

c1.add(3,4)



class calculation:
  @staticmethod
  def add(a,b):
    return a+b
c1 = calculation()

c1.add(3,4)



string = "abc123xyz456"
digits = ""
for char in string:
    if char.isdigit():
        digits += char
print(digits)  # Output: 123456



-----------------------------------------


(axis=0 for columns, axis=1 for rows)

------------------------------------------

10 jan 2025

import random

def checkprobs(coin_flip):
    heads = 0
    tails = 0
    
    for i in range(coin_flip):
        flip = random.choice(['Head','Tail'])
        if flip == 'Head':
            heads += 1
        else: 
            tails += 1
        
    heads_probs = heads/coin_flip
    tails_probs = tails/coin_flip
    
    print(f"Numbers of Coin Flip :- {coin_flip}")
    print(f"Head Count :- {heads} Probability :- {heads_probs:.2f}")
    print(f"Head Count :- {tails} Probability :- {tails_probs:.2f}")
    
coin_flip = int(input("enter the number for flip the coins :- "))
checkprobs(coin_flip)
   
-------------------------------------------------

import random

def coin_flip_simulation(num_flips):
    """Simulate coin flips, store results, and track running probabilities of heads."""
    results = []  # List to store each flip result
    probabilities = []  # List to store running probabilities of heads
    heads_count = 0

    for i in range(1, num_flips + 1):
        # Simulate a coin flip (heads or tails)
        flip = random.choice(["heads", "tails"])
        results.append(flip)  # Append the result to the list
        if flip == "heads":
            heads_count += 1

        # Calculate the running probability of heads
        probability_heads = heads_count / i
        probabilities.append(probability_heads)

    return results, probabilities

# Number of flips
num_flips = 10000

# Simulate and display the results
flip_results, running_probabilities = coin_flip_simulation(num_flips)
print(f"Coin flip results: {flip_results}")
print(f"Running probabilities of heads: {running_probabilities}")




functional ke liye pyplot and object oriented ke liye axis 

Normalization in python hum krtee h same axis prr aane ke liyee bcz sometimes axis are differents


probability distribution are the functions that is used to calculate possible outcomes

PMF - probability mask function 
PDF - probability density function


Recursion ---

list1 = [1,2,3,4,5,6,7,8,9,10];
def sum2(list1):
    if len(list1) == 1:
        return list1[0];
    else:
        return list1[0] + sum2(list1[1:]);
print(sum2(list1))
------------------------------------------

def fibonacci(n):
    # Base case: return n if n is 0 or 1
    if n <= 1:
        return n
    else:
        # Recursive case: return the sum of the two preceding numbers
        return fibonacci(n-1) + fibonacci(n-2)

# Example usage:
n_terms = 10  # Number of terms in the Fibonacci series

# Print the Fibonacci series
for i in range(n_terms):
    print(fibonacci(i))
------------------------------------------kjgjgf